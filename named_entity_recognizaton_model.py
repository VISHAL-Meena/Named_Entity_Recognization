# -*- coding: utf-8 -*-
"""Named Entity Recognizaton Model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rI4nplv7W5Utho9Rn6DXHUA-D2OS5vrY
"""

pip install simpletransformers

import torch

import pandas as pd
data=pd.read_csv("/content/ner_dataset.csv",encoding="latin1")

data.head(10)
data.shape

#data=pd.DataFrame(data)
#data.drop(data.index[1000:1045000],inplace=True,axis=0)
#data.shape

data=data.fillna(method="ffill")

data.head(30)

from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

data["Sentence #"]= LabelEncoder().fit_transform(data["Sentence #"])

data.head()

data.rename(columns={"Sentence #": "sentence_id","Word":"words","Tag":"labels",},inplace=True)

data["labels"]=data["labels"].str.upper()
data.head(5)

X=data[["sentence_id","words"]]
Y=data["labels"]

x_train,x_test,y_train,y_test =train_test_split(X,Y,test_size=0.2)

# building up train data and test data
train_data=pd.DataFrame({"sentence_id":x_train["sentence_id"],"words":x_train["words"],"labels":y_train})
test_data=pd.DataFrame({"sentence_id":x_test["sentence_id"],"words":x_test["words"],"labels":y_test})

train_data

"""Model Training"""

from simpletransformers.ner import NERModel,NERArgs

label=data["labels"].unique().tolist()
label

args=NERArgs()
args.num_train_epochs=1
args.learning_rate=1e-4
args.overwrite_output_dir=True
args.train_batch_size=32
args.eval_batch_size=32

model= NERModel('bert','bert-base-cased',labels=label,args=args,use_cuda=False)

model.train_model(train_data,eval_data=test_data,acc=accuracy_score)

result,model_outputs,preds_list=model.eval_model(test_data)

result

prediction,model_output=model.predict(["they marched from the houses of parliament"])

prediction

